
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOL ENTER ID NUM OPERATOR SEMICOLON do else endif if parentesis_der parentesis_izq read then wend while write\n    statement_list : statement_list statement ENTER\n                   | statement ENTER\n                   | statement_list statement\n                   | statement\n    \n    statement : read_statement\n              | if_statement\n              | while_statement\n              | write_statement\n    read_statement : read ID SEMICOLON\n    if_statement : if parentesis_izq condition parentesis_der then ENTER statement_list endif SEMICOLON\n                | if parentesis_izq condition parentesis_der then ENTER statement_list else ENTER statement_list endif SEMICOLON\n                | if parentesis_izq operando_statement parentesis_der then ENTER statement_list endif SEMICOLON\n                | if parentesis_izq operando_statement parentesis_der then ENTER statement_list else ENTER statement_list endif SEMICOLON\n    condition : BOOL\n    while_statement : while parentesis_izq condition parentesis_der do ENTER statement_list wend SEMICOLON\n                    | while parentesis_izq operando_statement parentesis_der do ENTER statement_list wend SEMICOLON\n    write_statement : write expression SEMICOLON\n    expression : ID\n               | NUM\n               | operando_statement\n    \n    operando_statement : expression OPERATOR expression    \n    '
    
_lr_action_items = {'read':([0,1,2,3,4,5,6,11,12,20,21,28,39,40,41,42,43,44,45,46,53,54,55,56,57,58,59,60,63,64,],[7,7,-4,-5,-6,-7,-8,-3,-2,-1,-9,-17,7,7,7,7,7,7,7,7,-10,7,-12,7,-15,-16,7,7,-11,-13,]),'if':([0,1,2,3,4,5,6,11,12,20,21,28,39,40,41,42,43,44,45,46,53,54,55,56,57,58,59,60,63,64,],[8,8,-4,-5,-6,-7,-8,-3,-2,-1,-9,-17,8,8,8,8,8,8,8,8,-10,8,-12,8,-15,-16,8,8,-11,-13,]),'while':([0,1,2,3,4,5,6,11,12,20,21,28,39,40,41,42,43,44,45,46,53,54,55,56,57,58,59,60,63,64,],[9,9,-4,-5,-6,-7,-8,-3,-2,-1,-9,-17,9,9,9,9,9,9,9,9,-10,9,-12,9,-15,-16,9,9,-11,-13,]),'write':([0,1,2,3,4,5,6,11,12,20,21,28,39,40,41,42,43,44,45,46,53,54,55,56,57,58,59,60,63,64,],[10,10,-4,-5,-6,-7,-8,-3,-2,-1,-9,-17,10,10,10,10,10,10,10,10,-10,10,-12,10,-15,-16,10,10,-11,-13,]),'$end':([1,2,3,4,5,6,11,12,20,21,28,53,55,57,58,63,64,],[0,-4,-5,-6,-7,-8,-3,-2,-1,-9,-17,-10,-12,-15,-16,-11,-13,]),'ENTER':([2,3,4,5,6,11,21,28,35,36,37,38,48,50,53,55,57,58,63,64,],[12,-5,-6,-7,-8,20,-9,-17,39,40,41,42,54,56,-10,-12,-15,-16,-11,-13,]),'endif':([2,3,4,5,6,11,12,20,21,28,43,44,53,55,57,58,59,60,63,64,],[-4,-5,-6,-7,-8,-3,-2,-1,-9,-17,47,49,-10,-12,-15,-16,61,62,-11,-13,]),'else':([2,3,4,5,6,11,12,20,21,28,43,44,53,55,57,58,63,64,],[-4,-5,-6,-7,-8,-3,-2,-1,-9,-17,48,50,-10,-12,-15,-16,-11,-13,]),'wend':([2,3,4,5,6,11,12,20,21,28,45,46,53,55,57,58,63,64,],[-4,-5,-6,-7,-8,-3,-2,-1,-9,-17,51,52,-10,-12,-15,-16,-11,-13,]),'ID':([7,10,14,15,29,],[13,17,17,17,17,]),'parentesis_izq':([8,9,],[14,15,]),'NUM':([10,14,15,29,],[18,18,18,18,]),'SEMICOLON':([13,16,17,18,19,34,47,49,51,52,61,62,],[21,28,-18,-19,-20,-21,53,55,57,58,63,64,]),'BOOL':([14,15,],[24,24,]),'OPERATOR':([16,17,18,19,23,25,27,34,],[29,-18,-19,-20,-20,29,-20,29,]),'parentesis_der':([17,18,19,22,23,24,26,27,34,],[-18,-19,-20,30,31,-14,32,33,-21,]),'then':([30,31,],[35,36,]),'do':([32,33,],[37,38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,39,40,41,42,54,56,],[1,43,44,45,46,59,60,]),'statement':([0,1,39,40,41,42,43,44,45,46,54,56,59,60,],[2,11,2,2,2,2,11,11,11,11,2,2,11,11,]),'read_statement':([0,1,39,40,41,42,43,44,45,46,54,56,59,60,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'if_statement':([0,1,39,40,41,42,43,44,45,46,54,56,59,60,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'while_statement':([0,1,39,40,41,42,43,44,45,46,54,56,59,60,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'write_statement':([0,1,39,40,41,42,43,44,45,46,54,56,59,60,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'expression':([10,14,15,29,],[16,25,25,34,]),'operando_statement':([10,14,15,29,],[19,23,27,19,]),'condition':([14,15,],[22,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement_list","S'",1,None,None,None),
  ('statement_list -> statement_list statement ENTER','statement_list',3,'p_statement_list','malf.py',68),
  ('statement_list -> statement ENTER','statement_list',2,'p_statement_list','malf.py',69),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','malf.py',70),
  ('statement_list -> statement','statement_list',1,'p_statement_list','malf.py',71),
  ('statement -> read_statement','statement',1,'p_statement','malf.py',77),
  ('statement -> if_statement','statement',1,'p_statement','malf.py',78),
  ('statement -> while_statement','statement',1,'p_statement','malf.py',79),
  ('statement -> write_statement','statement',1,'p_statement','malf.py',80),
  ('read_statement -> read ID SEMICOLON','read_statement',3,'p_read_statement','malf.py',85),
  ('if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list endif SEMICOLON','if_statement',9,'p_if_statement','malf.py',90),
  ('if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list else ENTER statement_list endif SEMICOLON','if_statement',12,'p_if_statement','malf.py',91),
  ('if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list endif SEMICOLON','if_statement',9,'p_if_statement','malf.py',92),
  ('if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list else ENTER statement_list endif SEMICOLON','if_statement',12,'p_if_statement','malf.py',93),
  ('condition -> BOOL','condition',1,'p_condition','malf.py',104),
  ('while_statement -> while parentesis_izq condition parentesis_der do ENTER statement_list wend SEMICOLON','while_statement',9,'p_while_statement','malf.py',109),
  ('while_statement -> while parentesis_izq operando_statement parentesis_der do ENTER statement_list wend SEMICOLON','while_statement',9,'p_while_statement','malf.py',110),
  ('write_statement -> write expression SEMICOLON','write_statement',3,'p_write_statement','malf.py',115),
  ('expression -> ID','expression',1,'p_expression','malf.py',120),
  ('expression -> NUM','expression',1,'p_expression','malf.py',121),
  ('expression -> operando_statement','expression',1,'p_expression','malf.py',122),
  ('operando_statement -> expression OPERATOR expression','operando_statement',3,'p_operando_statement','malf.py',127),
]
