
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOL ENTER ID NUM OPERATOR SEMICOLON do else endif if parentesis_der parentesis_izq read then wend while write\n    statement_list : statement_list statement\n                   | statement\n    \n    statement : read_statement\n              | if_statement\n              | while_statement\n              | write_statement\n    read_statement : read ID SEMICOLON\n    if_statement : if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON\n                | if condition then ENTER statement_list ENTER else_statement ENTER endif SEMICOLON\n                | if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON\n    \n    else_statement : else ENTER statement_list\n            | \n    condition : BOOL\n    while_statement : while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON\n                    | while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON\n    write_statement : write expression SEMICOLON\n    expression : ID\n               | NUM\n               | operando_statement\n    \n    operando_statement : expression OPERATOR expression    \n    '
    
_lr_action_items = {'read':([0,1,2,3,4,5,6,11,21,28,32,38,41,42,44,45,46,47,50,51,55,61,64,65,66,67,68,],[7,7,-2,-3,-4,-5,-6,-1,-7,-16,7,7,7,7,7,7,7,7,7,7,7,7,-8,-10,-9,-14,-15,]),'if':([0,1,2,3,4,5,6,11,21,28,32,38,41,42,44,45,46,47,50,51,55,61,64,65,66,67,68,],[8,8,-2,-3,-4,-5,-6,-1,-7,-16,8,8,8,8,8,8,8,8,8,8,8,8,-8,-10,-9,-14,-15,]),'while':([0,1,2,3,4,5,6,11,21,28,32,38,41,42,44,45,46,47,50,51,55,61,64,65,66,67,68,],[9,9,-2,-3,-4,-5,-6,-1,-7,-16,9,9,9,9,9,9,9,9,9,9,9,9,-8,-10,-9,-14,-15,]),'write':([0,1,2,3,4,5,6,11,21,28,32,38,41,42,44,45,46,47,50,51,55,61,64,65,66,67,68,],[10,10,-2,-3,-4,-5,-6,-1,-7,-16,10,10,10,10,10,10,10,10,10,10,10,10,-8,-10,-9,-14,-15,]),'$end':([1,2,3,4,5,6,11,21,28,64,65,66,67,68,],[0,-2,-3,-4,-5,-6,-1,-7,-16,-8,-10,-9,-14,-15,]),'ENTER':([2,3,4,5,6,11,21,25,28,36,37,38,39,40,43,46,47,48,49,50,51,61,64,65,66,67,68,],[-2,-3,-4,-5,-6,-1,-7,32,-16,41,42,43,44,45,-12,52,53,54,55,56,57,-11,-8,-10,-9,-14,-15,]),'ID':([7,10,13,16,29,],[12,18,18,18,18,]),'parentesis_izq':([8,9,],[13,16,]),'BOOL':([8,13,16,],[15,15,15,]),'NUM':([10,13,16,29,],[19,19,19,19,]),'SEMICOLON':([12,17,18,19,20,35,58,59,60,62,63,],[21,28,-17,-18,-19,-20,64,65,66,67,68,]),'then':([14,15,30,31,],[25,-13,36,37,]),'parentesis_der':([15,18,19,20,22,23,26,27,35,],[-13,-17,-18,-19,30,31,33,34,-20,]),'OPERATOR':([17,18,19,20,23,24,27,35,],[29,-17,-18,-19,-19,29,-19,29,]),'do':([33,34,],[39,40,]),'else':([43,],[49,]),'endif':([52,53,54,],[58,59,60,]),'wend':([56,57,],[62,63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,32,41,42,44,45,55,],[1,38,46,47,50,51,61,]),'statement':([0,1,32,38,41,42,44,45,46,47,50,51,55,61,],[2,11,2,11,2,2,2,2,11,11,11,11,2,11,]),'read_statement':([0,1,32,38,41,42,44,45,46,47,50,51,55,61,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'if_statement':([0,1,32,38,41,42,44,45,46,47,50,51,55,61,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'while_statement':([0,1,32,38,41,42,44,45,46,47,50,51,55,61,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'write_statement':([0,1,32,38,41,42,44,45,46,47,50,51,55,61,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'condition':([8,13,16,],[14,22,26,]),'expression':([10,13,16,29,],[17,24,24,35,]),'operando_statement':([10,13,16,29,],[20,23,27,20,]),'else_statement':([43,],[48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement_list","S'",1,None,None,None),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','malf.py',68),
  ('statement_list -> statement','statement_list',1,'p_statement_list','malf.py',69),
  ('statement -> read_statement','statement',1,'p_statement','malf.py',75),
  ('statement -> if_statement','statement',1,'p_statement','malf.py',76),
  ('statement -> while_statement','statement',1,'p_statement','malf.py',77),
  ('statement -> write_statement','statement',1,'p_statement','malf.py',78),
  ('read_statement -> read ID SEMICOLON','read_statement',3,'p_read_statement','malf.py',83),
  ('if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON','if_statement',10,'p_if_statement','malf.py',88),
  ('if_statement -> if condition then ENTER statement_list ENTER else_statement ENTER endif SEMICOLON','if_statement',10,'p_if_statement','malf.py',89),
  ('if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON','if_statement',10,'p_if_statement','malf.py',90),
  ('else_statement -> else ENTER statement_list','else_statement',3,'p_else_statement','malf.py',96),
  ('else_statement -> <empty>','else_statement',0,'p_else_statement','malf.py',97),
  ('condition -> BOOL','condition',1,'p_condition','malf.py',101),
  ('while_statement -> while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON','while_statement',10,'p_while_statement','malf.py',106),
  ('while_statement -> while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON','while_statement',10,'p_while_statement','malf.py',107),
  ('write_statement -> write expression SEMICOLON','write_statement',3,'p_write_statement','malf.py',112),
  ('expression -> ID','expression',1,'p_expression','malf.py',117),
  ('expression -> NUM','expression',1,'p_expression','malf.py',118),
  ('expression -> operando_statement','expression',1,'p_expression','malf.py',119),
  ('operando_statement -> expression OPERATOR expression','operando_statement',3,'p_operando_statement','malf.py',124),
]
