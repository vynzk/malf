Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement_list
Rule 1     statement_list -> statement_list statement
Rule 2     statement_list -> statement
Rule 3     statement -> read_statement
Rule 4     statement -> if_statement
Rule 5     statement -> while_statement
Rule 6     statement -> write_statement
Rule 7     read_statement -> read ID SEMICOLON
Rule 8     if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON
Rule 9     if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
Rule 10    if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON
Rule 11    if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
Rule 12    condition -> BOOL
Rule 13    while_statement -> while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON
Rule 14    while_statement -> while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON
Rule 15    write_statement -> write expression SEMICOLON
Rule 16    expression -> ID
Rule 17    expression -> NUM
Rule 18    expression -> operando_statement
Rule 19    operando_statement -> expression OPERATOR expression

Terminals, with rules where they appear

BOOL                 : 12
ENTER                : 8 8 9 9 9 9 10 10 11 11 11 11 13 13 14 14
ID                   : 7 16
NUM                  : 17
OPERATOR             : 19
SEMICOLON            : 7 8 9 10 11 13 14 15
do                   : 13 14
else                 : 9 11
endif                : 8 9 10 11
error                : 
if                   : 8 9 10 11
parentesis_der       : 8 9 10 11 13 14
parentesis_izq       : 8 9 10 11 13 14
read                 : 7
then                 : 8 9 10 11
wend                 : 13 14
while                : 13 14
write                : 15

Nonterminals, with rules where they appear

condition            : 8 9 13
expression           : 15 19 19
if_statement         : 4
operando_statement   : 10 11 14 18
read_statement       : 3
statement            : 1 2
statement_list       : 1 8 9 9 10 11 11 13 14 0
while_statement      : 5
write_statement      : 6

Parsing method: LALR

state 0

    (0) S' -> . statement_list
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . read_statement
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) statement -> . write_statement
    (7) read_statement -> . read ID SEMICOLON
    (8) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (10) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (13) while_statement -> . while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (14) while_statement -> . while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (15) write_statement -> . write expression SEMICOLON

    read            shift and go to state 7
    if              shift and go to state 8
    while           shift and go to state 9
    write           shift and go to state 10

    statement_list                 shift and go to state 1
    statement                      shift and go to state 2
    read_statement                 shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5
    write_statement                shift and go to state 6

state 1

    (0) S' -> statement_list .
    (1) statement_list -> statement_list . statement
    (3) statement -> . read_statement
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) statement -> . write_statement
    (7) read_statement -> . read ID SEMICOLON
    (8) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (10) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (13) while_statement -> . while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (14) while_statement -> . while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (15) write_statement -> . write expression SEMICOLON

    read            shift and go to state 7
    if              shift and go to state 8
    while           shift and go to state 9
    write           shift and go to state 10

    statement                      shift and go to state 11
    read_statement                 shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5
    write_statement                shift and go to state 6

state 2

    (2) statement_list -> statement .

    read            reduce using rule 2 (statement_list -> statement .)
    if              reduce using rule 2 (statement_list -> statement .)
    while           reduce using rule 2 (statement_list -> statement .)
    write           reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    ENTER           reduce using rule 2 (statement_list -> statement .)


state 3

    (3) statement -> read_statement .

    read            reduce using rule 3 (statement -> read_statement .)
    if              reduce using rule 3 (statement -> read_statement .)
    while           reduce using rule 3 (statement -> read_statement .)
    write           reduce using rule 3 (statement -> read_statement .)
    $end            reduce using rule 3 (statement -> read_statement .)
    ENTER           reduce using rule 3 (statement -> read_statement .)


state 4

    (4) statement -> if_statement .

    read            reduce using rule 4 (statement -> if_statement .)
    if              reduce using rule 4 (statement -> if_statement .)
    while           reduce using rule 4 (statement -> if_statement .)
    write           reduce using rule 4 (statement -> if_statement .)
    $end            reduce using rule 4 (statement -> if_statement .)
    ENTER           reduce using rule 4 (statement -> if_statement .)


state 5

    (5) statement -> while_statement .

    read            reduce using rule 5 (statement -> while_statement .)
    if              reduce using rule 5 (statement -> while_statement .)
    while           reduce using rule 5 (statement -> while_statement .)
    write           reduce using rule 5 (statement -> while_statement .)
    $end            reduce using rule 5 (statement -> while_statement .)
    ENTER           reduce using rule 5 (statement -> while_statement .)


state 6

    (6) statement -> write_statement .

    read            reduce using rule 6 (statement -> write_statement .)
    if              reduce using rule 6 (statement -> write_statement .)
    while           reduce using rule 6 (statement -> write_statement .)
    write           reduce using rule 6 (statement -> write_statement .)
    $end            reduce using rule 6 (statement -> write_statement .)
    ENTER           reduce using rule 6 (statement -> write_statement .)


state 7

    (7) read_statement -> read . ID SEMICOLON

    ID              shift and go to state 12


state 8

    (8) if_statement -> if . parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> if . parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (10) if_statement -> if . parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> if . parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON

    parentesis_izq  shift and go to state 13


state 9

    (13) while_statement -> while . parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (14) while_statement -> while . parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON

    parentesis_izq  shift and go to state 14


state 10

    (15) write_statement -> write . expression SEMICOLON
    (16) expression -> . ID
    (17) expression -> . NUM
    (18) expression -> . operando_statement
    (19) operando_statement -> . expression OPERATOR expression

    ID              shift and go to state 16
    NUM             shift and go to state 17

    expression                     shift and go to state 15
    operando_statement             shift and go to state 18

state 11

    (1) statement_list -> statement_list statement .

    read            reduce using rule 1 (statement_list -> statement_list statement .)
    if              reduce using rule 1 (statement_list -> statement_list statement .)
    while           reduce using rule 1 (statement_list -> statement_list statement .)
    write           reduce using rule 1 (statement_list -> statement_list statement .)
    $end            reduce using rule 1 (statement_list -> statement_list statement .)
    ENTER           reduce using rule 1 (statement_list -> statement_list statement .)


state 12

    (7) read_statement -> read ID . SEMICOLON

    SEMICOLON       shift and go to state 19


state 13

    (8) if_statement -> if parentesis_izq . condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> if parentesis_izq . condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (10) if_statement -> if parentesis_izq . operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> if parentesis_izq . operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (12) condition -> . BOOL
    (19) operando_statement -> . expression OPERATOR expression
    (16) expression -> . ID
    (17) expression -> . NUM
    (18) expression -> . operando_statement

    BOOL            shift and go to state 22
    ID              shift and go to state 16
    NUM             shift and go to state 17

    condition                      shift and go to state 20
    operando_statement             shift and go to state 21
    expression                     shift and go to state 23

state 14

    (13) while_statement -> while parentesis_izq . condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (14) while_statement -> while parentesis_izq . operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (12) condition -> . BOOL
    (19) operando_statement -> . expression OPERATOR expression
    (16) expression -> . ID
    (17) expression -> . NUM
    (18) expression -> . operando_statement

    BOOL            shift and go to state 22
    ID              shift and go to state 16
    NUM             shift and go to state 17

    condition                      shift and go to state 24
    operando_statement             shift and go to state 25
    expression                     shift and go to state 23

state 15

    (15) write_statement -> write expression . SEMICOLON
    (19) operando_statement -> expression . OPERATOR expression

    SEMICOLON       shift and go to state 26
    OPERATOR        shift and go to state 27


state 16

    (16) expression -> ID .

    SEMICOLON       reduce using rule 16 (expression -> ID .)
    OPERATOR        reduce using rule 16 (expression -> ID .)
    parentesis_der  reduce using rule 16 (expression -> ID .)


state 17

    (17) expression -> NUM .

    SEMICOLON       reduce using rule 17 (expression -> NUM .)
    OPERATOR        reduce using rule 17 (expression -> NUM .)
    parentesis_der  reduce using rule 17 (expression -> NUM .)


state 18

    (18) expression -> operando_statement .

    SEMICOLON       reduce using rule 18 (expression -> operando_statement .)
    OPERATOR        reduce using rule 18 (expression -> operando_statement .)
    parentesis_der  reduce using rule 18 (expression -> operando_statement .)


state 19

    (7) read_statement -> read ID SEMICOLON .

    read            reduce using rule 7 (read_statement -> read ID SEMICOLON .)
    if              reduce using rule 7 (read_statement -> read ID SEMICOLON .)
    while           reduce using rule 7 (read_statement -> read ID SEMICOLON .)
    write           reduce using rule 7 (read_statement -> read ID SEMICOLON .)
    $end            reduce using rule 7 (read_statement -> read ID SEMICOLON .)
    ENTER           reduce using rule 7 (read_statement -> read ID SEMICOLON .)


state 20

    (8) if_statement -> if parentesis_izq condition . parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> if parentesis_izq condition . parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON

    parentesis_der  shift and go to state 28


state 21

    (10) if_statement -> if parentesis_izq operando_statement . parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> if parentesis_izq operando_statement . parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (18) expression -> operando_statement .

    parentesis_der  shift and go to state 29
    OPERATOR        reduce using rule 18 (expression -> operando_statement .)


state 22

    (12) condition -> BOOL .

    parentesis_der  reduce using rule 12 (condition -> BOOL .)


state 23

    (19) operando_statement -> expression . OPERATOR expression

    OPERATOR        shift and go to state 27


state 24

    (13) while_statement -> while parentesis_izq condition . parentesis_der do ENTER statement_list ENTER wend SEMICOLON

    parentesis_der  shift and go to state 30


state 25

    (14) while_statement -> while parentesis_izq operando_statement . parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (18) expression -> operando_statement .

    parentesis_der  shift and go to state 31
    OPERATOR        reduce using rule 18 (expression -> operando_statement .)


state 26

    (15) write_statement -> write expression SEMICOLON .

    read            reduce using rule 15 (write_statement -> write expression SEMICOLON .)
    if              reduce using rule 15 (write_statement -> write expression SEMICOLON .)
    while           reduce using rule 15 (write_statement -> write expression SEMICOLON .)
    write           reduce using rule 15 (write_statement -> write expression SEMICOLON .)
    $end            reduce using rule 15 (write_statement -> write expression SEMICOLON .)
    ENTER           reduce using rule 15 (write_statement -> write expression SEMICOLON .)


state 27

    (19) operando_statement -> expression OPERATOR . expression
    (16) expression -> . ID
    (17) expression -> . NUM
    (18) expression -> . operando_statement
    (19) operando_statement -> . expression OPERATOR expression

    ID              shift and go to state 16
    NUM             shift and go to state 17

    expression                     shift and go to state 32
    operando_statement             shift and go to state 18

state 28

    (8) if_statement -> if parentesis_izq condition parentesis_der . then ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> if parentesis_izq condition parentesis_der . then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON

    then            shift and go to state 33


state 29

    (10) if_statement -> if parentesis_izq operando_statement parentesis_der . then ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> if parentesis_izq operando_statement parentesis_der . then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON

    then            shift and go to state 34


state 30

    (13) while_statement -> while parentesis_izq condition parentesis_der . do ENTER statement_list ENTER wend SEMICOLON

    do              shift and go to state 35


state 31

    (14) while_statement -> while parentesis_izq operando_statement parentesis_der . do ENTER statement_list ENTER wend SEMICOLON

    do              shift and go to state 36


state 32

    (19) operando_statement -> expression OPERATOR expression .
    (19) operando_statement -> expression . OPERATOR expression

  ! shift/reduce conflict for OPERATOR resolved as shift
    SEMICOLON       reduce using rule 19 (operando_statement -> expression OPERATOR expression .)
    parentesis_der  reduce using rule 19 (operando_statement -> expression OPERATOR expression .)
    OPERATOR        shift and go to state 27

  ! OPERATOR        [ reduce using rule 19 (operando_statement -> expression OPERATOR expression .) ]


state 33

    (8) if_statement -> if parentesis_izq condition parentesis_der then . ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> if parentesis_izq condition parentesis_der then . ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON

    ENTER           shift and go to state 37


state 34

    (10) if_statement -> if parentesis_izq operando_statement parentesis_der then . ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> if parentesis_izq operando_statement parentesis_der then . ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON

    ENTER           shift and go to state 38


state 35

    (13) while_statement -> while parentesis_izq condition parentesis_der do . ENTER statement_list ENTER wend SEMICOLON

    ENTER           shift and go to state 39


state 36

    (14) while_statement -> while parentesis_izq operando_statement parentesis_der do . ENTER statement_list ENTER wend SEMICOLON

    ENTER           shift and go to state 40


state 37

    (8) if_statement -> if parentesis_izq condition parentesis_der then ENTER . statement_list ENTER endif SEMICOLON
    (9) if_statement -> if parentesis_izq condition parentesis_der then ENTER . statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . read_statement
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) statement -> . write_statement
    (7) read_statement -> . read ID SEMICOLON
    (8) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (10) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (13) while_statement -> . while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (14) while_statement -> . while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (15) write_statement -> . write expression SEMICOLON

    read            shift and go to state 7
    if              shift and go to state 8
    while           shift and go to state 9
    write           shift and go to state 10

    statement_list                 shift and go to state 41
    statement                      shift and go to state 2
    read_statement                 shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5
    write_statement                shift and go to state 6

state 38

    (10) if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER . statement_list ENTER endif SEMICOLON
    (11) if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER . statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . read_statement
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) statement -> . write_statement
    (7) read_statement -> . read ID SEMICOLON
    (8) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (10) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (13) while_statement -> . while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (14) while_statement -> . while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (15) write_statement -> . write expression SEMICOLON

    read            shift and go to state 7
    if              shift and go to state 8
    while           shift and go to state 9
    write           shift and go to state 10

    statement_list                 shift and go to state 42
    statement                      shift and go to state 2
    read_statement                 shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5
    write_statement                shift and go to state 6

state 39

    (13) while_statement -> while parentesis_izq condition parentesis_der do ENTER . statement_list ENTER wend SEMICOLON
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . read_statement
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) statement -> . write_statement
    (7) read_statement -> . read ID SEMICOLON
    (8) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (10) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (13) while_statement -> . while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (14) while_statement -> . while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (15) write_statement -> . write expression SEMICOLON

    read            shift and go to state 7
    if              shift and go to state 8
    while           shift and go to state 9
    write           shift and go to state 10

    statement_list                 shift and go to state 43
    statement                      shift and go to state 2
    read_statement                 shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5
    write_statement                shift and go to state 6

state 40

    (14) while_statement -> while parentesis_izq operando_statement parentesis_der do ENTER . statement_list ENTER wend SEMICOLON
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . read_statement
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) statement -> . write_statement
    (7) read_statement -> . read ID SEMICOLON
    (8) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (10) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (13) while_statement -> . while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (14) while_statement -> . while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (15) write_statement -> . write expression SEMICOLON

    read            shift and go to state 7
    if              shift and go to state 8
    while           shift and go to state 9
    write           shift and go to state 10

    statement_list                 shift and go to state 44
    statement                      shift and go to state 2
    read_statement                 shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5
    write_statement                shift and go to state 6

state 41

    (8) if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list . ENTER endif SEMICOLON
    (9) if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list . ENTER else ENTER statement_list ENTER endif SEMICOLON
    (1) statement_list -> statement_list . statement
    (3) statement -> . read_statement
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) statement -> . write_statement
    (7) read_statement -> . read ID SEMICOLON
    (8) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (10) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (13) while_statement -> . while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (14) while_statement -> . while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (15) write_statement -> . write expression SEMICOLON

    ENTER           shift and go to state 45
    read            shift and go to state 7
    if              shift and go to state 8
    while           shift and go to state 9
    write           shift and go to state 10

    statement                      shift and go to state 11
    read_statement                 shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5
    write_statement                shift and go to state 6

state 42

    (10) if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list . ENTER endif SEMICOLON
    (11) if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list . ENTER else ENTER statement_list ENTER endif SEMICOLON
    (1) statement_list -> statement_list . statement
    (3) statement -> . read_statement
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) statement -> . write_statement
    (7) read_statement -> . read ID SEMICOLON
    (8) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (10) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (13) while_statement -> . while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (14) while_statement -> . while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (15) write_statement -> . write expression SEMICOLON

    ENTER           shift and go to state 46
    read            shift and go to state 7
    if              shift and go to state 8
    while           shift and go to state 9
    write           shift and go to state 10

    statement                      shift and go to state 11
    read_statement                 shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5
    write_statement                shift and go to state 6

state 43

    (13) while_statement -> while parentesis_izq condition parentesis_der do ENTER statement_list . ENTER wend SEMICOLON
    (1) statement_list -> statement_list . statement
    (3) statement -> . read_statement
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) statement -> . write_statement
    (7) read_statement -> . read ID SEMICOLON
    (8) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (10) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (13) while_statement -> . while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (14) while_statement -> . while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (15) write_statement -> . write expression SEMICOLON

    ENTER           shift and go to state 47
    read            shift and go to state 7
    if              shift and go to state 8
    while           shift and go to state 9
    write           shift and go to state 10

    statement                      shift and go to state 11
    read_statement                 shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5
    write_statement                shift and go to state 6

state 44

    (14) while_statement -> while parentesis_izq operando_statement parentesis_der do ENTER statement_list . ENTER wend SEMICOLON
    (1) statement_list -> statement_list . statement
    (3) statement -> . read_statement
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) statement -> . write_statement
    (7) read_statement -> . read ID SEMICOLON
    (8) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (10) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (13) while_statement -> . while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (14) while_statement -> . while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (15) write_statement -> . write expression SEMICOLON

    ENTER           shift and go to state 48
    read            shift and go to state 7
    if              shift and go to state 8
    while           shift and go to state 9
    write           shift and go to state 10

    statement                      shift and go to state 11
    read_statement                 shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5
    write_statement                shift and go to state 6

state 45

    (8) if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER . endif SEMICOLON
    (9) if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER . else ENTER statement_list ENTER endif SEMICOLON

    endif           shift and go to state 49
    else            shift and go to state 50


state 46

    (10) if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER . endif SEMICOLON
    (11) if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER . else ENTER statement_list ENTER endif SEMICOLON

    endif           shift and go to state 51
    else            shift and go to state 52


state 47

    (13) while_statement -> while parentesis_izq condition parentesis_der do ENTER statement_list ENTER . wend SEMICOLON

    wend            shift and go to state 53


state 48

    (14) while_statement -> while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER . wend SEMICOLON

    wend            shift and go to state 54


state 49

    (8) if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif . SEMICOLON

    SEMICOLON       shift and go to state 55


state 50

    (9) if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else . ENTER statement_list ENTER endif SEMICOLON

    ENTER           shift and go to state 56


state 51

    (10) if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif . SEMICOLON

    SEMICOLON       shift and go to state 57


state 52

    (11) if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else . ENTER statement_list ENTER endif SEMICOLON

    ENTER           shift and go to state 58


state 53

    (13) while_statement -> while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend . SEMICOLON

    SEMICOLON       shift and go to state 59


state 54

    (14) while_statement -> while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend . SEMICOLON

    SEMICOLON       shift and go to state 60


state 55

    (8) if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON .

    read            reduce using rule 8 (if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON .)
    if              reduce using rule 8 (if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON .)
    while           reduce using rule 8 (if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON .)
    write           reduce using rule 8 (if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON .)
    $end            reduce using rule 8 (if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON .)
    ENTER           reduce using rule 8 (if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON .)


state 56

    (9) if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER . statement_list ENTER endif SEMICOLON
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . read_statement
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) statement -> . write_statement
    (7) read_statement -> . read ID SEMICOLON
    (8) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (10) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (13) while_statement -> . while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (14) while_statement -> . while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (15) write_statement -> . write expression SEMICOLON

    read            shift and go to state 7
    if              shift and go to state 8
    while           shift and go to state 9
    write           shift and go to state 10

    statement_list                 shift and go to state 61
    statement                      shift and go to state 2
    read_statement                 shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5
    write_statement                shift and go to state 6

state 57

    (10) if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON .

    read            reduce using rule 10 (if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON .)
    if              reduce using rule 10 (if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON .)
    while           reduce using rule 10 (if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON .)
    write           reduce using rule 10 (if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON .)
    $end            reduce using rule 10 (if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON .)
    ENTER           reduce using rule 10 (if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON .)


state 58

    (11) if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER . statement_list ENTER endif SEMICOLON
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . read_statement
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) statement -> . write_statement
    (7) read_statement -> . read ID SEMICOLON
    (8) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (10) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (13) while_statement -> . while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (14) while_statement -> . while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (15) write_statement -> . write expression SEMICOLON

    read            shift and go to state 7
    if              shift and go to state 8
    while           shift and go to state 9
    write           shift and go to state 10

    statement_list                 shift and go to state 62
    statement                      shift and go to state 2
    read_statement                 shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5
    write_statement                shift and go to state 6

state 59

    (13) while_statement -> while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON .

    read            reduce using rule 13 (while_statement -> while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON .)
    if              reduce using rule 13 (while_statement -> while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON .)
    while           reduce using rule 13 (while_statement -> while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON .)
    write           reduce using rule 13 (while_statement -> while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON .)
    $end            reduce using rule 13 (while_statement -> while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON .)
    ENTER           reduce using rule 13 (while_statement -> while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON .)


state 60

    (14) while_statement -> while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON .

    read            reduce using rule 14 (while_statement -> while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON .)
    if              reduce using rule 14 (while_statement -> while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON .)
    while           reduce using rule 14 (while_statement -> while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON .)
    write           reduce using rule 14 (while_statement -> while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON .)
    $end            reduce using rule 14 (while_statement -> while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON .)
    ENTER           reduce using rule 14 (while_statement -> while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON .)


state 61

    (9) if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list . ENTER endif SEMICOLON
    (1) statement_list -> statement_list . statement
    (3) statement -> . read_statement
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) statement -> . write_statement
    (7) read_statement -> . read ID SEMICOLON
    (8) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (10) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (13) while_statement -> . while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (14) while_statement -> . while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (15) write_statement -> . write expression SEMICOLON

    ENTER           shift and go to state 63
    read            shift and go to state 7
    if              shift and go to state 8
    while           shift and go to state 9
    write           shift and go to state 10

    statement                      shift and go to state 11
    read_statement                 shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5
    write_statement                shift and go to state 6

state 62

    (11) if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list . ENTER endif SEMICOLON
    (1) statement_list -> statement_list . statement
    (3) statement -> . read_statement
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) statement -> . write_statement
    (7) read_statement -> . read ID SEMICOLON
    (8) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (9) if_statement -> . if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (10) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER endif SEMICOLON
    (11) if_statement -> . if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON
    (13) while_statement -> . while parentesis_izq condition parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (14) while_statement -> . while parentesis_izq operando_statement parentesis_der do ENTER statement_list ENTER wend SEMICOLON
    (15) write_statement -> . write expression SEMICOLON

    ENTER           shift and go to state 64
    read            shift and go to state 7
    if              shift and go to state 8
    while           shift and go to state 9
    write           shift and go to state 10

    statement                      shift and go to state 11
    read_statement                 shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5
    write_statement                shift and go to state 6

state 63

    (9) if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER . endif SEMICOLON

    endif           shift and go to state 65


state 64

    (11) if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER . endif SEMICOLON

    endif           shift and go to state 66


state 65

    (9) if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif . SEMICOLON

    SEMICOLON       shift and go to state 67


state 66

    (11) if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif . SEMICOLON

    SEMICOLON       shift and go to state 68


state 67

    (9) if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON .

    read            reduce using rule 9 (if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON .)
    if              reduce using rule 9 (if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON .)
    while           reduce using rule 9 (if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON .)
    write           reduce using rule 9 (if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON .)
    $end            reduce using rule 9 (if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON .)
    ENTER           reduce using rule 9 (if_statement -> if parentesis_izq condition parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON .)


state 68

    (11) if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON .

    read            reduce using rule 11 (if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON .)
    if              reduce using rule 11 (if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON .)
    while           reduce using rule 11 (if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON .)
    write           reduce using rule 11 (if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON .)
    $end            reduce using rule 11 (if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON .)
    ENTER           reduce using rule 11 (if_statement -> if parentesis_izq operando_statement parentesis_der then ENTER statement_list ENTER else ENTER statement_list ENTER endif SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OPERATOR in state 32 resolved as shift
